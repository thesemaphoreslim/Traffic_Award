{
  "allexchangewallets": "INSERT INTO exchange_wallets (wallet_id) VALUES (@poloid),(@bittid),(@brsid),(@mortid),(@liveid);",

  "allexchangepurchases": "SELECT * from transaction trans INNER JOIN exchange_wallets wall ON trans.sender_id=wall.wallet_id AND trans.recipient_id<>wall.wallet_id WHERE trans.type=0 AND trans.timestamp>=@starttime AND trans.amount>=@exchangemin;",

  "exchangeminamount": "1000000000000",

  "db_server": "localhost",

  "db_port": "3306",

  "db_uid": "burstwallet",

  "db_pwd": "burstwallet",

  "db_name": "burstwallet",

  "poloid": "5810532812037266198",

  "bittid": "-5063553784103844629",

  "brsid": "-3382445822566252642",

  "bmfid": "-1151854202306370986",

  "bmfpid": "-2687430935354532896",

  "mortid": "-6170125764990584993",

  "devid": "8909519353220579349",

  "liveid": "-3487892597769638279",

  "getrecipients": "SELECT recipient_id FROM transaction WHERE timestamp >= @starttime AND timestamp <= @endtime AND type=0 AND sender_id=@recipient AND NOT recipient_id IS NULL",

  "getexchangetrans": "SELECT recipient_id from transaction trans INNER JOIN exchange_wallets wall ON trans.sender_id=wall.wallet_id AND trans.recipient_id<>wall.wallet_id WHERE trans.timestamp >= @starttime AND trans.timestamp <= @endtime AND trans.type=0 AND trans.amount>=@exchangemin AND trans.recipient_id NOT IN (@poloid,@bittid,@devid,@liveid);",
  
  "getexchangetransamt": "SELECT recip.recipient_id FROM (SELECT SUM(amount) amt, recipient_id FROM transaction trans INNER JOIN exchange_wallets wall ON trans.sender_id=wall.wallet_id AND trans.recipient_id<>wall.wallet_id WHERE trans.timestamp >= @starttime AND trans.timestamp <= @endtime AND trans.type=0 AND trans.amount>=@exchangemin AND trans.recipient_id NOT IN (@poloid,@bittid,@devid,@liveid) group by recipient_id) recip LEFT JOIN (SELECT SUM(amount) amt, sender_id FROM transaction trans INNER JOIN exchange_wallets wall ON trans.recipient_id=wall.wallet_id AND trans.sender_id<>wall.wallet_id WHERE trans.timestamp >= @starttime AND trans.timestamp <= @endtime AND trans.type=0 group by sender_id) sender ON recip.recipient_id=sender.sender_id WHERE sender.sender_id IS NULL OR (recip.amt-sender.amt)>=@exchangemin;",

  "getalltransactions": "SELECT trans.amount, trans.fee, trans.recipient_id, trans.sender_id, trans.timestamp, trans.id as trans_id FROM transaction as trans INNER JOIN block ON trans.block_id=block.id WHERE block.timestamp >= @starttime AND block.timestamp <= @endtime AND trans.type=0 AND trans.amount>=@burstamount;",

  "getqualifyingtransactions": "SELECT sender_id, amount, fee FROM all_weekly_trans as trans WHERE trans.recipient_id NOT IN (@poloid,@bittid,@brsid,@mortid,@liveid) AND sender_id NOT IN (SELECT wallet_id FROM exchange_wallets UNION SELECT recip_id as wallet_id from reward_recip_assign) AND sender_id NOT IN (@bmfid,@bmfpid,@devid);",

  "getpoolwallets": "SELECT DISTINCT recip_id from reward_recip_assign;",

  "getnewbmfmembers": "INSERT INTO raffle_summary (wallet_id, total_entries, exchange_entries, trans_entries, bmf_entries, reductions) SELECT DISTINCT reward.account_id, 0, 0, 0, @bmfaward, 0 FROM reward_recip_assign reward INNER JOIN transaction trans ON reward.height=trans.height where recip_id=@bmfpid AND latest=true and trans.timestamp >= @starttime AND trans.timestamp <= @endtime ON DUPLICATE KEY UPDATE bmf_entries=@bmfaward;",

  "getbmfdonations": "INSERT INTO raffle_summary (wallet_id, total_entries, exchange_entries, trans_entries, bmf_entries, reductions) SELECT sender_id, 0, 0, 0, @bmfaward, 0 from transaction where recipient_id=@bmfid AND timestamp>=@starttime AND timestamp<=@endtime AND amount>=@burstamount AND sender_id NOT IN (SELECT wallet_id from exchange_wallets UNION SELECT recip_id FROM reward_recip_assign where latest=true group by recip_id having count(db_id)>1) and sender_id NOT IN (@bmfid,@bmfpid,@devid) ON DUPLICATE KEY UPDATE bmf_entries=(bmf_entries+@bmfaward);",

  "exchangemin": "1000000000000",

  "startdayinterval": "-7",

  "startdatetime": "",

  "enddayinterval": "0",

  "enddatetime": "",

  "burstamount": "100000000000",

  "feeamount": "100000000",

  "minfeeamount": "10000000",

  "numofwinners": "10",

  "getwinnerdata": "SELECT trans_id from all_weekly_trans WHERE sender_id=@winner LIMIT 1;",

  "BurstTransactionsAPI": "http://localhost:8125/burst?requestType=getAccountTransactionIds&account=",

  "BurstAddressAPI": "http://localhost:8125/burst?requestType=rsConvert&account=",

  "BurstStringID": "http://localhost:8125/burst?requestType=longConvert&id=",

  "geteligibility": "SELECT CONCAT(sender_id, ',', recipient_id) FROM transaction WHERE id=@transid;",

  "removepooladdresses": "true",

  "checkfortable": "SELECT table_name FROM information_schema.tables WHERE table_schema=@db_name and table_name=@table_name",

  "createexchangetable": "CREATE TABLE exchange_wallets (wallet_id BIGINT(19) NOT NULL, PRIMARY KEY(wallet_id)) ENGINE INNODB COLLATE 'utf8_bin' ROW_FORMAT DEFAULT;",

  "createtranstable": "CREATE TABLE burstwallet.all_weekly_trans (db_id BIGINT(20) NOT NULL AUTO_INCREMENT,trans_id BIGINT(20) NOT NULL,amount BIGINT(20) NOT NULL,fee BIGINT(20) NOT NULL,`timestamp` INT(11) NOT NULL,recipient_id BIGINT(20) NULL,sender_id BIGINT(20) NOT NULL,PRIMARY KEY(db_id)) ENGINE INNODB COLLATE 'utf8_bin' ROW_FORMAT DEFAULT;",

  "createsummarytable": "CREATE TABLE raffle_summary (wallet_id BIGINT(19) NOT NULL, wallet_address VARCHAR(30) NULL, total_entries INT(11) NOT NULL, exchange_entries INT(11) NOT NULL, trans_entries INT(11) NOT NULL, bmf_entries INT(11) NOT NULL, reductions INT(11) NOT NULL,PRIMARY KEY(wallet_id)) ENGINE INNODB COLLATE 'utf8_bin' ROW_FORMAT DEFAULT;",

  "summarytableupsert": "INSERT INTO raffle_summary (wallet_id, total_entries, exchange_entries, trans_entries, bmf_entries, reductions) VALUES (@wallet_id, 0, @exchange_entries, @trans_entries, 0, @reductions) ON DUPLICATE KEY UPDATE exchange_entries=(exchange_entries + VALUES(exchange_entries)), trans_entries=(trans_entries + VALUES(trans_entries)), reductions=(reductions + VALUES(reductions));",

  "getsummarydata": "SELECT * FROM raffle_summary;",

  "maxraffleentries": "50",

  "contestantsfile": "contestants.csv",

  "winnersfile": "winners.csv",

  "transactionaward": "1",

  "exchangeaward": "5",

  "bmfaward": "10"
}